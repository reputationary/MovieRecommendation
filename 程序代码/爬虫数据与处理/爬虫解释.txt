技术栈：Python，C++
利用Python编写（豆瓣电影.py）爬虫爬取豆瓣电影Top250上的电影相关数据并进行数据清洗，
通过编写（User.py）程序利用随机数生成用户数据，
通过编写（训练数据.py）程序利用随机数生成20000条训练数据来训练模型，
使用Python处理数据格式使得数据方便加载并导入MySQL数据库



爬虫与数据处理
技术栈：python及相关第三方库（request，random等）

豆瓣电影.py：
爬取豆瓣电影Top250的信息，并将这些信息的插入语句打印到控制台上，再进行数据库交互。
具体实现过程是使用requests和lxml库发起网络请求和解析网页，从而获取电影信息。
同时，还有一些辅助函数用于获取列表中的第一个元素和一些字符串处理操作。
爬取的内容包括电影封面、电影标题、电影链接、导演、评分、评论人数、电影简介、年份、国家、类型等，并对其进行计数。

User.py：
生成200个随机用户名和密码，并构建对应的SQL插入语句。
具体实现：
导入random和string模块，用于生成随机数和随机字符串。
定义一个空列表users，用于存储生成的用户名和密码。定义两个set类型的变量，分别用于去重。
将用户名和密码分别加入到used_usernames和used_passwords中。
构建对应的SQL插入语句，并加入到insert_statements列表中。
使用for循环遍历insert_statements列表，输出每一条SQL插入语句

训练数据.py：
生成20000条电影评分数据，并将数据以两种形式输出到文件中：
一种是以空格分隔的文本格式，另一种是以SQL插入语句的形式。
将data_lines和sql_lines中的所有行依次写入到指定的文件路径下。
生成电影评分数据并输出到文件中，用于训练和测试推荐系统应用场景。